services:
  zoo1:
    image: confluentinc/cp-zookeeper:7.3.2
    hostname: zoo1
    container_name: zoo1
    ports:
      - "2181:2181"
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000

  kafka1:
    image: confluentinc/cp-kafka:7.3.2
    hostname: kafka1
    container_name: kafka1
    ports:
      - "9092:9092"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: "zoo1:2181"
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka1:9092,DOCKER://host.docker.internal:29092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,DOCKER:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
    depends_on:
      - zoo1

  kafka2:
    image: confluentinc/cp-kafka:7.3.2
    hostname: kafka2
    container_name: kafka2
    ports:
      - "9093:9093"
    environment:
      KAFKA_BROKER_ID: 2
      KAFKA_ZOOKEEPER_CONNECT: "zoo1:2181"
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka2:9093,DOCKER://host.docker.internal:29093
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,DOCKER:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
    depends_on:
      - zoo1

  kafka3:
    image: confluentinc/cp-kafka:7.3.2
    hostname: kafka3
    container_name: kafka3
    ports:
      - "9094:9094"
    environment:
      KAFKA_BROKER_ID: 3
      KAFKA_ZOOKEEPER_CONNECT: "zoo1:2181"
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka3:9094,DOCKER://host.docker.internal:29094
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,DOCKER:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
    depends_on:
      - zoo1



  userservice-master:
    image: mysql:latest
    container_name: userservice-master
    environment:
      MYSQL_ROOT_PASSWORD: wxwwxw123
      MYSQL_DATABASE: userservice
      MYSQL_ALLOW_EMPTY_PASSWORD: true
    ports:
      - "3307:3306"
    volumes:
      - userservice_master_data:/var/lib/mysql
      - ./conf.d/master/userservice:/etc/mysql/conf.d
      - ./init-scripts/userservice-master:/docker-entrypoint-initdb.d
    command: ["/bin/sh", "-c", "chmod 644 /etc/mysql/conf.d/my.cnf && exec docker-entrypoint.sh --bind-address=0.0.0.0 --mysql-native-password=ON "]
    healthcheck:
      test: [ "CMD", "mysqladmin", "ping", "-h", "localhost" ]
      interval: 10s
      timeout: 30s
      retries: 10

  userservice-slave:
    image: mysql:latest
    container_name: userservice-slave
    environment:
      MYSQL_ROOT_PASSWORD: wxwwxw123
      MYSQL_DATABASE: userservice
      MYSQL_ALLOW_EMPTY_PASSWORD: true
    ports:
      - "3308:3306"
    volumes:
      - userservice_slave_data:/var/lib/mysql
      - ./conf.d/slave:/etc/mysql/conf.d
      - ./init-scripts/userservice-slave:/docker-entrypoint-initdb.d
    command: ["/bin/sh", "-c", "chmod 644 /etc/mysql/conf.d/my.cnf && exec docker-entrypoint.sh --bind-address=0.0.0.0 --mysql-native-password=ON"]
    healthcheck:
      test: [ "CMD", "mysqladmin", "ping", "-h", "localhost" ]
      interval: 10s
      timeout: 30s
      retries: 10
    depends_on:
      userservice-master:
        condition: service_healthy

  orderservice-master:
    image: mysql:latest
    container_name: orderservice-master
    environment:
      MYSQL_ROOT_PASSWORD: wxwwxw123
      MYSQL_DATABASE: orderservice
      MYSQL_ALLOW_EMPTY_PASSWORD: true
    ports:
      - "3309:3306"
    volumes:
      - orderservice_master_data:/var/lib/mysql
      - ./conf.d/master/orderservice:/etc/mysql/conf.d
      - ./init-scripts/orderservice-master:/docker-entrypoint-initdb.d
    command: ["/bin/sh", "-c", "chmod 644 /etc/mysql/conf.d/my.cnf && exec docker-entrypoint.sh --bind-address=0.0.0.0 --mysql-native-password=ON"]
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost"]
      interval: 10s
      timeout: 30s
      retries: 10

  orderservice-slave:
    image: mysql:latest
    container_name: orderservice-slave
    environment:
      MYSQL_ROOT_PASSWORD: wxwwxw123
      MYSQL_DATABASE: orderservice
      MYSQL_ALLOW_EMPTY_PASSWORD: true
    ports:
      - "3310:3306"
    volumes:
      - orderservice_slave_data:/var/lib/mysql
      - ./conf.d/slave:/etc/mysql/conf.d
      - ./init-scripts/orderservice-slave:/docker-entrypoint-initdb.d
    command: ["/bin/sh", "-c", "chmod 644 /etc/mysql/conf.d/my.cnf && exec docker-entrypoint.sh --bind-address=0.0.0.0 --mysql-native-password=ON"]
    healthcheck:
      test: [ "CMD", "mysqladmin", "ping", "-h", "localhost" ]
      interval: 10s
      timeout: 30s
      retries: 10
    depends_on:
      orderservice-master:
        condition: service_healthy

  itemservice-master:
    image: mysql:latest
    container_name: itemservice-master
    environment:
      MYSQL_ROOT_PASSWORD: wxwwxw123
      MYSQL_DATABASE: itemservice
      MYSQL_ALLOW_EMPTY_PASSWORD: true
    ports:
      - "3311:3306"
    volumes:
      - itemservice_master_data:/var/lib/mysql
      - ./conf.d/master/itemservice:/etc/mysql/conf.d
      - ./init-scripts/itemservice-master:/docker-entrypoint-initdb.d
    command: ["/bin/sh", "-c", "chmod 644 /etc/mysql/conf.d/my.cnf && exec docker-entrypoint.sh --bind-address=0.0.0.0 --mysql-native-password=ON"]
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost"]
      interval: 10s
      timeout: 30s
      retries: 10

  itemservice-slave:
    image: mysql:latest
    container_name: itemservice-slave
    environment:
      MYSQL_ROOT_PASSWORD: wxwwxw123
      MYSQL_DATABASE: itemservice
      MYSQL_ALLOW_EMPTY_PASSWORD: true
    ports:
      - "3312:3306"
    volumes:
      - itemservice_slave_data:/var/lib/mysql
      - ./conf.d/slave:/etc/mysql/conf.d
      - ./init-scripts/itemservice-slave:/docker-entrypoint-initdb.d
    command: ["/bin/sh", "-c", "chmod 644 /etc/mysql/conf.d/my.cnf && exec docker-entrypoint.sh --bind-address=0.0.0.0 --mysql-native-password=ON"]
    healthcheck:
      test: [ "CMD", "mysqladmin", "ping", "-h", "localhost" ]
      interval: 10s
      timeout: 30s
      retries: 10
    depends_on:
      itemservice-master:
        condition: service_healthy

  paymentservice-failed-messages:
    image: mysql:latest
    container_name: paymentservice-failed-messages
    ports:
      - "3313:3306"
    environment:
      MYSQL_ROOT_PASSWORD: wxwwxw123
      MYSQL_DATABASE: paymentservice
    volumes:
      - paymentservice_failed_messages_data:/var/lib/mysql
      - ./init-scripts/paymentservice:/docker-entrypoint-initdb.d
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost"]
      interval: 10s
      timeout: 30s
      retries: 10

  redis-master:
    image: redis:7.0.9
    hostname: redis-master
    container_name: redis-master
    ports:
      - "6379:6379"
    command: redis-server --requirepass wxwwxw123 --appendonly yes

  redis-sentinel1:
    image: redis:7.0.9
    hostname: redis-sentinel1
    container_name: redis-sentinel1
    ports:
      - "26379:26379"
    command: redis-sentinel /usr/local/etc/redis/sentinel.conf
    volumes:
      - ./redis/sentinel1.conf:/usr/local/etc/redis/sentinel.conf
    depends_on:
      - redis-master

  redis-sentinel2:
    image: redis:7.0.9
    hostname: redis-sentinel2
    container_name: redis-sentinel2
    ports:
      - "26380:26380"
    command: redis-sentinel /usr/local/etc/redis/sentinel.conf
    volumes:
      - ./redis/sentinel2.conf:/usr/local/etc/redis/sentinel.conf
    depends_on:
      - redis-master

  redis-sentinel3:
    image: redis:7.0.9
    hostname: redis-sentinel3
    container_name: redis-sentinel3
    ports:
      - "26381:26381"
    command: redis-sentinel /usr/local/etc/redis/sentinel.conf
    volumes:
      - ./redis/sentinel3.conf:/usr/local/etc/redis/sentinel.conf
    depends_on:
      - redis-master

  redis-slave1:
    image: redis:7.0.9
    hostname: redis-slave1
    container_name: redis-slave1
    ports:
      - "6380:6379"
    command: redis-server --slaveof redis-master 6379 --masterauth wxwwxw123 --requirepass wxwwxw123
    depends_on:
      - redis-master

  redis-slave2:
    image: redis:7.0.9
    hostname: redis-slave2
    container_name: redis-slave2
    ports:
      - "6381:6379"
    command: redis-server --slaveof redis-master 6379 --masterauth wxwwxw123 --requirepass wxwwxw123
    depends_on:
      - redis-master